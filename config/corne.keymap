/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "spanish.h"

/ {
    #define ACCENTED_KEY(NAME, LABEL_U, LABEL_L, LABEL, KEY, DEAD_KEY) \
        ac_##NAME##_l: ac_##NAME##_l { \
            wait-ms = <0>; \
            tap-ms = <0>; \
            label = LABEL_L; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_tap &kp KEY> \
                ; \
        }; \
        ac_##NAME##_u: ac_##NAME##_u { \
            wait-ms = <0>; \
            tap-ms = <0>; \
            label = LABEL_U; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_release &kp LSHFT> \
                , <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_press &kp LSHFT> \
                , <&macro_tap &kp KEY> \
                , <&macro_release &kp LSHFT> \
                ; \
        }; \
        ac_##NAME: ac_##NAME { \
            label = LABEL; \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <&ac_##NAME##_l>, <&ac_##NAME##_u>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
            keep-mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

    accents {
        ACCENTED_KEY(aacu, "á", "Á", "áÁ", A, E)
        ACCENTED_KEY(eacu, "é", "É", "éÉ", E, E)
        ACCENTED_KEY(iacu, "í", "Í", "íÍ", I, E)
        ACCENTED_KEY(oacu, "ó", "Ó", "óÓ", O, E)
        ACCENTED_KEY(uacu, "ú", "Ú", "úÚ", U, E)
    };

    behaviors {
        mm0: slash_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_TO_UNDERSCORE";
            #binding-cells = <0>;
            bindings = <ES_SLASH>, <ES_UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK_LEFT";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <ES_LSHFT>, <ES_CAPS>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSLOCK_RIGHT";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <ES_RSHFT>, <ES_CAPS>;
        };
        tdo: o_acute {
            compatible = "zmk,behavior-tap-dance";
            label = "O_ACUTE";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <ES_O>, <ac_oacute>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
// -------------------------------------------------------------   -------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |   |    Y    |    U    |    I    |    O    |    P    |  BKSP   |
     ES_ESC     ES_Q      ES_W      ES_E      ES_R      ES_T          ES_Y      ES_U      ES_I       tdo      ES_P     ES_BSPC
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |   TAB   |    A    |    S    |    D    |    F    |    G    |   |    H    |    J    |    K    |    L    |    Ñ    |  L-CTRL |
     ES_TAB     ES_A      ES_S      ES_D      ES_F      ES_G          ES_H      ES_J      ES_K      ES_L     ES_EGNE   ES_LCTRL
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |SHFT/CAPS|    Z    |    X    |    C    |    V    |    B    |   |    N    |    M    |    ,    |    .    |    /    |   SHFT  |
      &td0      ES_Z      ES_X      ES_C      ES_V      ES_B          ES_N      ES_M     ES_COMMA  ES_DOT      &mm0      &td1 
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
//                               |   CMD   |   LWR   |  SPACE  |   |  RETURN |   RSE   |   ALT   |
                                   ES_LCMD    LAY_2    ES_SPC         ES_RET    LAY_1    ES_ALGR
//                               |         |         |         |   |         |         |         |
//                               -------------------------------   -------------------------------
            >;
        };

        number_layer {
            bindings = <
// -------------------------------------------------------------   -------------------------------------------------------------
// |   ESC   |    *    |    1    |    2    |    3    |    +    |   |         |         |         |         |         |         |
     ES_ESC    ES_STAR    ES_1      ES_2      ES_3     ES_PLUS       ES_HOME   ES_PGDN   ES_PGUP   ES_END    ES_TRANS ES_VOL_UP
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |   TAB   |    /    |    4    |    5    |    6    |    -    |   |         |         |         |         |         |         |
     ES_TAB    ES_SLASH   ES_4      ES_5      ES_6     ES_DASH       ES_LEFT   ES_DOWN    ES_UP    ES_RIGHT  ES_TRANS  ES_MUTE
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |  SHFT   |    =    |    7    |    8    |    9    |    0    |   |         |         |         |         |         |         |
     ES_LSHFT  ES_EQUAL   ES_7      ES_8      ES_9      ES_0         ES_PREV   ES_STOP   ES_PLAY   ES_NEXT   ES_TRANS ES_VOL_DN
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
//                               |         |         |         |   |         |         |         |
                                   ES_TRANS  ES_TRANS  ES_TRANS      ES_TRANS  ES_TRANS  ES_TRANS
//                               |         |         |         |   |         |         |         |
//                               -------------------------------   -------------------------------
            >;
        };

        symbol_layer {
            bindings = <
// -------------------------------------------------------------   -------------------------------------------------------------
// |   ESC   |    *    |    ~    |    @    |    #    |    +    |   |    "    |    {    |    }    |    =    |    ?    |  BKSP   |
     ES_ESC    ES_STAR   ES_TILDE   ES_AT    ES_HASH   ES_PLUS     ES_DOUB_APO ES_BRACE ES_BRACE_R ES_EQUAL ES_QUEST_R ES_BSPC
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |   TAB   |    /    |    $    |    %    |    &    |    -    |   |    '    |    (    |    )    |    |    |    `    |  R-CTRL |
     ES_TAB    ES_SLASH  ES_DOLL   ES_PERC   ES_AMPER  ES_DASH       ES_APOS   ES_PAREN ES_PAREN_R ES_PIPE  ES_ACEN_R  ES_RCTRL
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
// |  SHFT   |    =    |         |         |         |    ^    |   |    <    |    [    |    ]    |    >    |    \    |   SHFT  |
     ES_LSHFT  ES_EQUAL  ES_TRANS  ES_TRANS  ES_TRANS ES_ACEN_CIR   ES_LESS  ES_BRACKET ES_BRACKET_R ES_MORE ES_SLASH  ES_RSHFT 
// |         |         |         |         |         |         |   |         |         |         |         |         |         |
// -------------------------------------------------------------   -------------------------------------------------------------
//                               |         |         |         |   |         |         |         |
                                   ES_TRANS  ES_TRANS  ES_TRANS      ES_TRANS  ES_TRANS  ES_TRANS
//                               |         |         |         |   |         |         |         |
//                               -------------------------------   -------------------------------
            >;
        };
    };
};
